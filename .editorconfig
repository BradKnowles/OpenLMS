# editorconfig.org

# top-most EditorConfig file
root = true

# Default settings:
[*]
charset                  = utf-8
insert_final_newline     = true
indent_style             = space
indent_size              = 4
trim_trailing_whitespace = true
#dotnet_code_quality_unused_parameters = non_public : suggestion

[*.json]
indent_size = 2

# Generated code
[*{_AssemblyInfo.cs,.notsupported.cs}]
generated_code = true

# C# files
[*.cs]
# New line preferences
csharp_new_line_before_open_brace                                        = all
csharp_new_line_before_else                                              = true
csharp_new_line_before_catch                                             = true
csharp_new_line_before_finally                                           = true
csharp_new_line_before_members_in_object_initializers                    = true
csharp_new_line_before_members_in_anonymous_types                        = true
csharp_new_line_between_query_expression_clauses                         = true

# Indentation preferences
csharp_indent_block_contents                                             = true
csharp_indent_braces                                                     = false
csharp_indent_case_contents                                              = true
csharp_indent_case_contents_when_block                                   = true
csharp_indent_switch_labels                                              = true
csharp_indent_labels                                                     = one_less_than_current

# Modifier preferences
csharp_preferred_modifier_order                                          = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async : suggestion

# avoid this. unless absolutely necessary
dotnet_style_qualification_for_field                                     = false : suggestion
dotnet_style_qualification_for_property                                  = false : suggestion
dotnet_style_qualification_for_method                                    = false : suggestion
dotnet_style_qualification_for_event                                     = false : suggestion

# Types: permit var only when the type is clear
csharp_style_var_for_built_in_types                                      = false
csharp_style_var_when_type_is_apparent                                   = true
csharp_style_var_elsewhere                                               = false
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0007-ide0008
dotnet_diagnostic.IDE0007.severity                                       = warning
dotnet_diagnostic.IDE0008.severity                                       = warning

# Types: use keywords instead of BCL types
dotnet_style_predefined_type_for_locals_parameters_members               = false : suggestion
dotnet_style_predefined_type_for_member_access                           = false : suggestion

# name all constant fields using PascalCase
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity        = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols         = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style           = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds                   = field
dotnet_naming_symbols.constant_fields.required_modifiers                 = const
dotnet_naming_style.pascal_case_style.capitalization                     = pascal_case

# static fields should have s_ prefix
dotnet_naming_rule.static_fields_should_have_prefix.severity             = suggestion
dotnet_naming_rule.static_fields_should_have_prefix.symbols              = static_fields
dotnet_naming_rule.static_fields_should_have_prefix.style                = static_prefix_style
dotnet_naming_symbols.static_fields.applicable_kinds                     = field
dotnet_naming_symbols.static_fields.required_modifiers                   = static
dotnet_naming_symbols.static_fields.applicable_accessibilities           = private, internal, private_protected
dotnet_naming_style.static_prefix_style.required_prefix                  = s_
dotnet_naming_style.static_prefix_style.capitalization                   = camel_case

# internal and private fields should be _camelCase
dotnet_naming_rule.camel_case_for_private_internal_fields.severity       = suggestion
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols        = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style          = camel_case_underscore_style
dotnet_naming_symbols.private_internal_fields.applicable_kinds           = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal
dotnet_naming_style.camel_case_underscore_style.required_prefix          = _
dotnet_naming_style.camel_case_underscore_style.capitalization           = camel_case

# Code style defaults
csharp_using_directive_placement                                         = outside_namespace : suggestion
dotnet_sort_system_directives_first                                      = true
dotnet_separate_import_directive_groups                                  = true

# IDE0011 : Add braces
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0011
csharp_prefer_braces                                                     = when_multiline : suggestion
dotnet_diagnostic.IDE0011.severity                                       = warning

# IDE0130 : Namespace does not match folder structure
dotnet_style_namespace_match_folder                                      = true
dotnet_diagnostic.IDE0130.severity                                       = error

csharp_preserve_single_line_blocks                                       = true
csharp_preserve_single_line_statements                                   = true
csharp_prefer_static_local_function                                      = true : suggestion
csharp_prefer_simple_using_statement                                     = false : none
csharp_style_prefer_switch_expression                                    = true : suggestion
dotnet_style_readonly_field                                              = true : suggestion

# Expression-level preferences
dotnet_style_object_initializer                                          = true : suggestion
dotnet_style_collection_initializer                                      = true : suggestion
dotnet_style_explicit_tuple_names                                        = true : suggestion
dotnet_style_coalesce_expression                                         = true : suggestion
dotnet_style_null_propagation                                            = true : suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method         = true : suggestion
dotnet_style_prefer_inferred_tuple_names                                 = true : suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names                 = true : suggestion
dotnet_style_prefer_auto_properties                                      = true : suggestion
dotnet_style_prefer_conditional_expression_over_assignment               = true : silent
dotnet_style_prefer_conditional_expression_over_return                   = false : suggestion
csharp_prefer_simple_default_expression                                  = true : suggestion

# Expression-bodied members
csharp_style_expression_bodied_constructors                              = when_on_single_line
# IDE0021: Use expression body for constructors
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0021
dotnet_diagnostic.IDE0021.severity                                       = suggestion

csharp_style_expression_bodied_methods                                   = when_on_single_line : suggestion
# IDE0022: Use expression body for methods
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0022
dotnet_diagnostic.IDE0022.severity                                       = suggestion

csharp_style_expression_bodied_operators                                 = when_on_single_line
csharp_style_expression_bodied_properties                                = when_on_single_line
csharp_style_expression_bodied_indexers                                  = when_on_single_line
csharp_style_expression_bodied_accessors                                 = when_on_single_line
csharp_style_expression_bodied_lambdas                                   = when_on_single_line
csharp_style_expression_bodied_local_functions                           = when_on_single_line

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check                    = true : suggestion
csharp_style_pattern_matching_over_as_with_null_check                    = true : suggestion
csharp_style_inlined_variable_declaration                                = true : suggestion

# Null checking preferences
csharp_style_throw_expression                                            = true : suggestion
csharp_style_conditional_delegate_call                                   = true : suggestion

# Other features
csharp_style_prefer_index_operator                                       = false : none
csharp_style_prefer_range_operator                                       = false : none
csharp_style_pattern_local_over_anonymous_function                       = false : none

csharp_style_unused_value_assignment_preference                          = discard_variable
# IDE0059: Remove unnecessary value assignment
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0059
dotnet_diagnostic.IDE0059.severity                                       = warning

# Space preferences
csharp_space_after_cast                                                  = false
csharp_space_after_colon_in_inheritance_clause                           = true
csharp_space_after_comma                                                 = true
csharp_space_after_dot                                                   = false
csharp_space_after_keywords_in_control_flow_statements                   = true
csharp_space_after_semicolon_in_for_statement                            = true
csharp_space_around_binary_operators                                     = before_and_after
csharp_space_around_declaration_statements                               = false
csharp_space_before_colon_in_inheritance_clause                          = true
csharp_space_before_comma                                                = false
csharp_space_before_dot                                                  = false
csharp_space_before_open_square_brackets                                 = false
csharp_space_before_semicolon_in_for_statement                           = false
csharp_space_between_empty_square_brackets                               = false
csharp_space_between_method_call_empty_parameter_list_parentheses        = false
csharp_space_between_method_call_name_and_opening_parenthesis            = false
csharp_space_between_method_call_parameter_list_parentheses              = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis        = false
csharp_space_between_method_declaration_parameter_list_parentheses       = false
csharp_space_between_parentheses                                         = false
csharp_space_between_square_brackets                                     = false


# CA1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
# XML documentation has to be enabled for IDE0005 to show. This disables the warnings
# https://github.com/dotnet/roslyn/issues/41640
# https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-messages/cs1591
dotnet_diagnostic.CS1591.severity                                        = none

# CA1028: Enum storage should be Int32 - Allow Enum to be based on other datatypes
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1028
dotnet_diagnostic.CA1028.severity                                        = none

# CA1303: Do not pass literals as localized parameters - Ignore... for now
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1303#when-to-suppress-warnings
dotnet_diagnostic.CA1303.severity                                        = none

# IDE0090: Simplify new expression
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0090
csharp_style_implicit_object_creation_when_type_is_apparent              = false
dotnet_diagnostic.IDE0090.severity                                       = none

# CA1812: Avoid uninstantiated internal classes
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1812
# This project will be creating Actors through the actor system, which triggers this analyzer
dotnet_diagnostic.CA1812.severity                                        = none

# CA1034: Nested types should not be visible
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1034
# This project will be creating Actors through the actor system, which triggers this analyzer
dotnet_diagnostic.CA1034.severity                                        = none


dotnet_analyzer_diagnostic.category-CodeQuality.severity                 = warning
dotnet_analyzer_diagnostic.category-Design.severity                      = error
dotnet_analyzer_diagnostic.category-Globalization.severity               = none
dotnet_analyzer_diagnostic.category-Naming.severity                      = warning
dotnet_analyzer_diagnostic.category-Performance.severity                 = suggestion
dotnet_analyzer_diagnostic.category-Publish.severity                     = suggestion
dotnet_analyzer_diagnostic.category-Reliability.severity                 = suggestion
dotnet_analyzer_diagnostic.category-Security.severity                    = suggestion
dotnet_analyzer_diagnostic.category-Style.severity                       = error
dotnet_analyzer_diagnostic.category-Usage.severity                       = warning

# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,nativeproj,locproj}]
indent_size = 2
end_of_line = crlf

# Xml build files
[*.builds]
indent_size = 2

# Xml files
[*.{xml,resx,ruleset}]
indent_size = 2

# Xml config files
[*.{props,targets,config,nuspec}]
indent_size = 2

# YAML config files
[*.{yml,yaml}]
indent_size = 2

# Shell scripts
[*.sh]
end_of_line = lf

[*.{cmd,bat}]
end_of_line = crlf
